---
### Setup inventory directories
# TODO: Use a variable rather than hardcoded array of [development, staging, production]
- name: Ensure each inventory directory exists
  file:
    path: '{{ playbook_dir }}/inventory/{{ item }}'
    state: directory
  with_items: [local, development, staging, production]

- template:
    src: inventory-roles.j2
    dest: '{{ playbook_dir }}/inventory/roles'

- name: Softlink the roles file into each inventory directory
  file:
    src: '../roles'
    dest: '{{ playbook_dir }}/inventory/{{ item }}/roles'
    state: link
  with_items: [local, development, staging, production]

- name: Softlink the ec2.py file into each inventory directory
  file:
    src: '../ec2.py'
    dest: '{{ playbook_dir }}/inventory/{{ item }}/ec2.py'
    state: link
  with_items: [development, staging, production]

- name: Template an ec2.ini for each role
  template:
    src: ec2.ini.j2
    dest: '{{ playbook_dir }}/inventory/{{ item }}/ec2.ini'
  with_items: [development, staging, production]

- name: One time template each inventory hosts file
  template:
    src: inventory-hosts.j2
    dest: '{{ playbook_dir }}/inventory/{{ item }}/hosts'
    force: no
  with_items: [development, staging, production]


### Setup credentials and data directories
- name: Check for existence of ~/prepd
  stat:
    path: '{{ prepd_dir }}'
  register: prepd

- name: Ensure data and crendentials directories exist in ~/prepd
  file:
    path: '{{ prepd_dir }}/{{ item }}/{{ project_name }}'
    state: directory
  with_items: [credentials, data]
  when: prepd.stat.isdir

- name: Create links to data and credentials directories in ~/prepd
  file:
    src: '{{ prepd_dir }}/{{ item }}/{{ project_name }}'
    dest: '{{ project_dir }}/{{ item }}'
    state: link
  with_items: [credentials, data]
  when: prepd.stat.isdir

- name: Ensure data and crendentials directories exist
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - '{{ credentials_dir }}'
    - '{{ data_dir }}'
  when: not prepd.stat.isdir

- name: Create developer.yml
  template:
    src: developer.yml.j2
    dest: '{{ credentials_dir }}/developer.yml'

- name: Create vault password file
  template:
    src: vault-password.txt.j2
    dest: '{{ credentials_dir }}/vault-password.txt'


### Setup git and submodule dependencies
- name: Inialize git repostiory
  command: '{{ item }}'
  args:
    chdir: '{{ ops_dir }}'
  with_items:
    - rm -rf .git
    - git init

- name: Clone dependent roles
  command: 'git submodule add {{ item.repo }} {{ item.location }}'
  args:
    chdir: '{{ ops_dir }}'
    creates: '{{ item.location }}'
  with_items:
    - { repo: 'git@github.com:rjayroach/prepd-roles.git', location: 'ansible/community-roles/prepd' }
    - { repo: 'git@github.com:rjayroach/terraplate.git', location: 'ansible/community-roles/terraplate' }
    - { repo: 'git@github.com:rjayroach/terraplate-components.git', location: 'ansible/community-roles/terraplate-components' }

- name: Add files and make first commit
  command: '{{ item }}'
  args:
    chdir: '{{ ops_dir }}'
  with_items:
    - git add .
    - git commit -m 'first commit from prepd'
